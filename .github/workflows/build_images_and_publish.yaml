name: 'Build Images and Publish'

on:
  push:
    branches:
      - gaiax-hackathon/*
  pull_request:

jobs:
  build:
    name: 'Build Docker images'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Setup Java JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '11'
          distribution: 'adopt'
      - name: Gradle Build
        run: ./gradlew clean shadowJar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Consumer
        uses: docker/build-push-action@v2
        with:
          context: samples/gaiax-hackathon-1/identity/launchers/simple-consumer
          pull: true
          push: true
          platforms: linux/amd64
          cache-to: type=inline
          tags: ghcr.io/beardyinc/dataspaceconnector/gx-consumer:latest

      - name: Build and push Provider
        uses: docker/build-push-action@v2
        with:
          context: samples/gaiax-hackathon-1/identity/launchers/simple-provider
          pull: true
          push: true
          platforms: linux/amd64
          cache-to: type=inline
          tags: ghcr.io/beardyinc/dataspaceconnector/gx-provider:latest

      - name: Build and push Registry Service
        uses: docker/build-push-action@v2
        with:
          context: samples/gaiax-hackathon-1/identity/launchers/registration-service-app
          pull: true
          push: true
          platforms: linux/amd64
          cache-to: type=inline
          tags: ghcr.io/beardyinc/dataspaceconnector/gx-reg-svc:latest

  terraform:
    name: 'Deploy'
    needs: build

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_CERTIFICATE: ${{ secrets.PRIMARY_APP_ID_CERT }}
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
    runs-on: ubuntu-latest
    environment: edc-demo

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure fmt -check
        continue-on-error: true

      # Marks all deployed apps as "tainted", thereby forcing them to be replaced
      - name: Terraform Taint Provider
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure taint azurerm_container_group.gx-provider
        continue-on-error: true

      - name: Terraform Taint Consumer
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure taint azurerm_container_group.gx-consumer
        continue-on-error: true

      - name: Terraform Taint Registration Service
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure taint azurerm_container_group.gx-registration-service
        continue-on-error: true

        # On push to main, build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        #        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform -chdir=samples/gaiax-hackathon-1/identity/infrastructure apply -auto-approve -var "environment=gaiax-hackathon" -var "docker_repo_username=${{ github.repository_owner}}" -var "docker_repo_password=${{ secrets.GITHUB_TOKEN }}"  -var "backend_account_key=${{ secrets.TF_BACKEND_KEY }}"
