name: Verify and Publish OpenAPI Specs

on:
  workflow_call:
    inputs:
      version:
        required: true
        description: "The version under which the API should be published"
        type: string

  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'CODEOWNERS'
      - 'LICENSE'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Verify-OpenAPI-Definitions:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        apiGroup: [ 'management-api', 'control-api' ]
    env:
      rootDir: resources/openapi/yaml/${{ matrix.apiGroup }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-build

      - name: Save previous OpenAPI definition
        run: |
          mkdir -p git-sorted/${{ matrix.apiGroup }}
          files=($(ls $rootDir)) 
          for file in ${files[@]}; do
            yq -P 'sort_keys(..)' $rootDir/$file > git-sorted/${{ matrix.apiGroup }}/$file
          done

      - name: Generate OpenAPI definitions from code
        run: |
          export
          ./gradlew resolve

      # Can be used (and yq tasks removed) when https://github.com/kpramesh2212/openapi-merger-plugin/pull/11/files is merged
      #- name: Check OpenAPI definitions match code
      #  run: git diff --exit-code

      - name: Check OpenAPI definitions match code
        run: |
          mkdir -p git-regen/${{ matrix.apiGroup }}
          files=($(ls resources/openapi/yaml/${{ matrix.apiGroup}})) 

          for file in ${files[@]}; do
            yq -P 'sort_keys(..)' $rootDir/$file > git-regen/${{ matrix.apiGroup }}/$file
          done

          diff -r git-sorted git-regen

  Publish-To-SwaggerHub:
    # do NOT run on forks or on PRs. The Org ("edc") is unique all across SwaggerHub
    if: github.repository == 'eclipse-edc/Connector' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [ Verify-OpenAPI-Definitions ]
    strategy:
      matrix:
        apiGroup: [ 'management-api', 'control-api' ]
    env:
      rootDir: resources/openapi/yaml/${{ matrix.apiGroup }}
      SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_TOKEN }}
      SWAGGERHUB_USER: ${{ secrets.SWAGGERHUB_USER }}
      VERSION: ${{ github.event.inputs.version || inputs.version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-build
      - uses: actions/setup-node@v3

      # merge together all api groups
      - name: Generate API Specs
        run: |
          # give option to override
          cmd=""
          if [ ! -z $VERSION ]; then
            cmd="-Pversion=$VERSION"
          fi
          ./gradlew ${cmd} -PapiTitle="${{ matrix.apiGroup }}" -PapiDescription="REST API documentation for the ${{ matrix.apiGroup }}" :mergeApiSpec --input=${{ env.rootDir }} --output=${{ matrix.apiGroup }}.yaml

      # install swaggerhub CLI
      - name: Install SwaggerHub CLI
        run: npm i -g swaggerhub-cli

      # create API, will fail if exists
      - name: Create API
        continue-on-error: true
        run: |
          swaggerhub api:create ${{ env.SWAGGERHUB_USER }}/${{ matrix.apiGroup}} -f ${{ matrix.apiGroup }}.yaml --visibility=public --published=unpublish

      # Post snapshots of the API to SwaggerHub as "unpublished", because published APIs cannot be overwritten
      - name: Publish API Specs to SwaggerHub
        run: |
          # coalesce $VERSION, or whatever's stored in gradle.properties
          vers=${VERSION:-$(grep "version" gradle.properties  | awk -F= '{print $2}')}
          
          if [[ $vers != *-SNAPSHOT ]]; then
            echo "no snapshot, will set the API to 'published'";
            swaggerhub api:update ${{ env.SWAGGERHUB_USER }}/${{ matrix.apiGroup}} -f ${{ matrix.apiGroup }}.yaml --visibility=public --published=publish
          else
            echo "snapshot, will set the API to 'unpublished'";
            swaggerhub api:update ${{ env.SWAGGERHUB_USER }}/${{ matrix.apiGroup}} -f ${{ matrix.apiGroup }}.yaml --visibility=public --published=unpublish
          fi
